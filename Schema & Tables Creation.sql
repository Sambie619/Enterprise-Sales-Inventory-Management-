-- CUSTOMERS table
CREATE TABLE customers(
    customer_id NUMBER GENERATED by DEFAULT as IDENTITY PRIMARY KEY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    email VARCHAR2(100) UNIQUE,
    phone VARCHAR2(50),
    created_at DATE DEFAULT sysdate
);
CREATE TABLE PRODUCTS (
    product_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_name    VARCHAR2(100) NOT NULL,
    category        VARCHAR2(50),
    price           NUMBER(10,2) NOT NULL,
    stock_quantity  NUMBER DEFAULT 0,
    supplier_id     NUMBER,
    CONSTRAINT fk_supplier FOREIGN KEY (supplier_id)REFERENCES SUPPLIERS(supplier_id)
);
-- SUPPLIERS table
CREATE TABLE SUPPLIERS (
    supplier_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    supplier_name   VARCHAR2(100) NOT NULL,
    contact_email   VARCHAR2(100),
    contact_phone   VARCHAR2(15)
); 
-- EMPLOYEES table
CREATE TABLE EMPLOYEES (
    employee_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name      VARCHAR2(50) NOT NULL,
    last_name       VARCHAR2(50) NOT NULL,
    role            VARCHAR2(50),
    hire_date       DATE DEFAULT SYSDATE
);
-- ORDERS table
CREATE TABLE ORDERS (
    order_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id     NUMBER NOT NULL,
    order_date      DATE DEFAULT SYSDATE,
    status          VARCHAR2(20) DEFAULT 'PENDING',
    employee_id     NUMBER,
    CONSTRAINT fk_customer FOREIGN KEY (customer_id) REFERENCES CUSTOMERS(customer_id),
    CONSTRAINT fk_employee FOREIGN KEY (employee_id) REFERENCES EMPLOYEES(employee_id)
);

-- ORDER_ITEMS table
CREATE TABLE ORDER_ITEMS (
    order_item_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id        NUMBER NOT NULL,
    product_id      NUMBER NOT NULL,
    quantity        NUMBER NOT NULL,
    price_each      NUMBER(10,2) NOT NULL,
    CONSTRAINT fk_order FOREIGN KEY (order_id) REFERENCES ORDERS(order_id),
    CONSTRAINT fk_product FOREIGN KEY (product_id) REFERENCES PRODUCTS(product_id)
);

-- PAYMENTS table
CREATE TABLE PAYMENTS (
    payment_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id        NUMBER NOT NULL,
    payment_date    DATE DEFAULT SYSDATE,
    amount          NUMBER(10,2) NOT NULL,
    method          VARCHAR2(20) CHECK (method IN ('CASH','CARD','UPI','BANK')),
    CONSTRAINT fk_payment_order FOREIGN KEY (order_id) REFERENCES ORDERS(order_id)
);

-- SHIPMENTS table
CREATE TABLE SHIPMENTS (
    shipment_id     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    order_id        NUMBER NOT NULL,
    shipped_date    DATE,
    delivery_date   DATE,
    status          VARCHAR2(20) DEFAULT 'IN_TRANSIT',
    CONSTRAINT fk_shipment_order FOREIGN KEY (order_id) REFERENCES ORDERS(order_id)
);

-- AUDIT_LOG table (for triggers later)
CREATE TABLE AUDIT_LOG (
    log_id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    table_name      VARCHAR2(50),
    operation       VARCHAR2(20),
    changed_at      DATE DEFAULT SYSDATE,
    details         VARCHAR2(4000)
);